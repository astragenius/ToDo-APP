(()=>{"use strict";const e=document.getElementById("delete__btn"),t=document.getElementById("toDoInput"),n=document.getElementsByTagName("ul")[0],l=(()=>{const e=e=>{const t=document.querySelector(".item_num"),n=document.querySelector(".toDolist"),l=[...document.querySelectorAll(".checkbox")];let c=0,o=0;if(t.textContent=n.children.length,"all"==e&&(t.textContent=n.children.length),"done"==e){for(let e=0;e<l.length;e++)1==l[e].checked&&c++;t.textContent=c}if("open"==e){for(let e=0;e<l.length;e++)0==l[e].checked&&o++;t.textContent=o}},t=e=>{e.target.checked,e.target.parentElement.parentElement.nextElementSibling.classList.toggle("del")};return{addToDo:()=>{let e=document.getElementById("toDoInput");document.querySelector(".toDolist").insertAdjacentElement("afterbegin",(e=>{const n=document.createElement("div"),l=document.createElement("div"),c=document.createElement("label"),o=document.createElement("input"),s=document.createElement("span"),r=document.createElement("li"),a=document.createElement("input");return n.setAttribute("class","toDolist__content add-item"),n.setAttribute("draggable","true"),l.setAttribute("class","checkbox__container"),c.setAttribute("class","container_label"),o.setAttribute("type","checkbox"),o.setAttribute("class","checkbox"),o.addEventListener("click",t),s.setAttribute("class","checkmark"),r.textContent=e,a.setAttribute("class","delete__cross"),a.setAttribute("type","image"),a.setAttribute("src","images/icon-cross.svg"),c.appendChild(o),c.appendChild(s),l.appendChild(c),n.appendChild(l),n.appendChild(r),n.appendChild(a),(d=n).addEventListener("dragstart",(function(e){e.target.classList.add("dragging")})),d.addEventListener("dragover",(function(e){const t=document.querySelector(".toDolist");e.preventDefault();const n=document.querySelector(".dragging"),l=(c=t,o=e.clientY,[...c.querySelectorAll(".toDolist__content:not(.dragging)")].reduce(((e,t)=>{const n=t.getBoundingClientRect(),l=o-n.top-n.height/2;return l<0&&l>e.offset?{offset:l,element:t}:e}),{offset:Number.NEGATIVE_INFINITY}).element);var c,o;null==l?t.appendChild(n):t.insertBefore(n,l)})),d.addEventListener("dragend",(function(e){e.target.classList.remove("dragging")})),n;var d})(e.value)),e.value=""},removeTodo:t=>{"delete__cross"===t.target.className&&t.target.parentElement.classList.contains("add-item")&&(t.target.parentElement.classList.remove("add-item"),t.target.parentElement.classList.add("removed-item"),setTimeout((function(){t.target.parentElement.remove(),e()}),600))},delComplete:()=>{document.querySelectorAll(".container_label > input").forEach((e=>{!0===e.checked&&e.parentElement.parentElement.parentElement.remove()}))},checkItems:e,completeToDo:()=>{const e=document.querySelectorAll(".checkbox"),t=document.querySelectorAll(".toDolist__content");for(let n=0;n<e.length;n++)!0===e[n].checked?t[n].style.display="flex":t[n].style.display="none"},activeToDo:()=>{const e=document.querySelectorAll(".checkbox"),t=document.querySelectorAll(".toDolist__content");for(let n=0;n<e.length;n++)!1===e[n].checked?t[n].style.display="flex":t[n].style.display="none"},showAll:()=>{const e=document.querySelectorAll(".toDolist__content");for(let t=0;t<e.length;t++)(e[t].style.display="none")&&(e[t].style.display="flex")}}})(),c=document.querySelectorAll(".filter_all"),o=document.querySelectorAll(".filter_active"),s=document.querySelectorAll(".filter_complete");document.getElementById("toggle").addEventListener("click",(function(){const e=document.getElementsByTagName("html")[0],t=document.getElementById("toggle"),n=document.getElementById("toggleContainer");"light"===e.className?(e.classList.remove("light"),e.classList.add("dark"),t.classList.remove("btn--light"),t.classList.add("btn--dark"),n.classList.remove("container--light"),n.classList.add("container--dark")):(e.classList.remove("dark"),e.classList.add("light"),t.classList.remove("btn--dark"),t.classList.add("btn--light"),n.classList.remove("container--dark"),n.classList.add("container--light"))})),l.checkItems("all"),s.forEach((e=>{e.addEventListener("click",(function(){l.completeToDo(),l.checkItems("done")}))})),o.forEach((e=>{e.addEventListener("click",(function(){l.activeToDo(),l.checkItems("open")}))})),c.forEach((e=>{e.addEventListener("click",(function(){l.showAll(),l.checkItems("all")}))})),t.addEventListener("change",(function(){l.addToDo(),l.checkItems()})),n.addEventListener("click",(function(e){l.removeTodo(e)})),e.addEventListener("click",(function(){l.delComplete(),l.checkItems()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,